(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{216:function(a,s,n){"use strict";n.r(s);var e=n(0),r=Object(e.a)({},function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"_4-1-0-找出一个数组中出现次数最多是元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-0-找出一个数组中出现次数最多是元素","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.1.0 找出一个数组中出现次数最多是元素")]),a._v(" "),n("h2",{attrs:{id:"_1-先找出一个数组中各个元素出现的次数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-先找出一个数组中各个元素出现的次数","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.先找出一个数组中各个元素出现的次数")]),a._v(" "),n("p",[a._v("(1).利用 hash 键值对存储")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("function most(arr) {\n  let obj = {};\n  for(let i=0;i<arr.length;i++){\n    let k = arr[i]; \n    if(obj[k]){\n      obj[k]++;\n    }else{\n      obj[k] = 1;\n    }\n  }\n  // 再比较obj中键值最大的\n  ......\n  \n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br")])]),n("p",[a._v("(3).借助数组Array的reduce方法")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("function most(arr) {\n  let max;\n  let maxNum = 1;\n  let newObj = arr.reduce(function(cal,value) {\n    cal[value]? cal[value]++ : cal[value]=1;\n    if(cal[value]>max) {\n      max = value\n      max++;\n    }\n    return cal;\n  },{})\n  return newObj;\n}\n\nor\n\nfunction most(arr) {\n  let max;\n  let maxNum = 1;\n  let newObj = arr.reduce(function(cal,value) {\n    if (value in cal) {\n      cal[value]++;\n    }else {\n      cal[value] = 1;\n    }\n    return cal;\n  },{})\n  return newObj;\n}\n\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br")])]),n("p",[a._v("（4）.利用ES6语法以及逗号运算符进行的代码优化，这个方法看起来代码量很少，但是理解起来却需要花费一定的功夫")]),a._v(" "),n("ul",[n("li",[a._v("逗号运算符")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("let a = (1,2,3);\na\n// 3\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("ul",[n("li",[a._v("demo:")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("function most(arr) {\n let obj = arr.reduce((cal,v)=>(\n  cal[v]++ || (cal[v] = 1),\n  (cal.max = cal.max >= cal[v]? cal.max:cal[v]),\n  (cal.key = cal.max > cal[v]? cal.key: v),\n  cal\n ),\n{})\nreturn obj;\n}\n\nmost([2,5,6,7,5,8,7])\n// {2: 1, 5: 2, 6: 1, 7: 2, 8: 1, max: 2, key: 7}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br")])]),n("h2",{attrs:{id:"_2-找出一个数组中数值元素最大值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-找出一个数组中数值元素最大值","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.找出一个数组中数值元素最大值")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("1.es6拓展运算符...\nMath.max(...arr)\n\n2.es5 apply(与方法1原理相同)\n\nMath.max.apply(null,arr)  \nor  \nMath.max.call(null,...[1,5,6,9])\n\n3.for循环\n\nlet max = arr[0];\nfor (let i = 0; i < arr.length - 1; i++) {\n    max = max < arr[i+1] ? arr[i+1] : max\n}\n\n4.数组sort()\n\narr.sort((a, b) => {\n    return  b - a\n})\narr[0]\n\n5.数组reduce\n\narr.reduce((a, b) => {\n    return a > b ? a : b}\n)\n\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br")])]),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://www.cnblogs.com/iwzyuan/p/9343051.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("利用js找出数组中最大值"),n("OutboundLink")],1)]),a._v(" "),n("li",[n("a",{attrs:{href:"https://blog.csdn.net/u011277123/article/details/72819099",target:"_blank",rel:"noopener noreferrer"}},[a._v("找出数组中频率最高元素的多种方法"),n("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=r.exports}}]);