(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{225:function(n,s,a){"use strict";a.r(s);var e=a(0),t=Object(e.a)({},function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"_1-1-5-react-父子组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-5-react-父子组件通信","aria-hidden":"true"}},[n._v("#")]),n._v(" 1.1.5 react 父子组件通信")]),n._v(" "),a("blockquote",[a("p",[n._v("React 数据流动是单向的；\n父组件向子组件通信: props"),a("br"),n._v("\n子组件向父组件通信: 回调函数/自定义事件"),a("br"),n._v("\n跨级组件通信: 层层组件传递props/context"),a("br"),n._v("\n没有嵌套关系组件之间的通信: 自定义事件")])]),n._v(" "),a("h2",{attrs:{id:"父组件向子组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父组件向子组件通信","aria-hidden":"true"}},[n._v("#")]),n._v(" 父组件向子组件通信")]),n._v(" "),a("blockquote",[a("p",[n._v("通过 props")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("# 1.父组件调用子组件传递参数\n\n# parent.js\n\nclass Parent extends Component {\n  render() {\n    return (\n      <div>\n          <Child name=\"testparam\" />\n      </div>\n    );\n  }\n}\n\n\n# child.js\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Child extends Component  {\n  render() {\n      return (\n          <div>{this.props.name}</div>\n      );\n  }\n}\n\nChild.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Child;\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br")])]),a("h2",{attrs:{id:"_2-子组件向父组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-子组件向父组件通信","aria-hidden":"true"}},[n._v("#")]),n._v(" 2.子组件向父组件通信")]),n._v(" "),a("blockquote",[a("p",[n._v("利用回调函数"),a("br"),n._v("\n利用自定义事件机制")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("父组件中： \n\nhideConponent() {\n  this.setState({\n    isShowChild: false,\n  });\n}\nrender() {\n  return (\n    <div>\n      <child hideConponent={this.hideConponent.bind(this)} />\n    </div>\n  );\n}\n\n\n子组件中：\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Child extends Component {\n  static propTypes = {\n    hideConponent: PropTypes.func.isRequired,\n  }\n  render() {  \n    return (\n      <div>\n        this is child\n        <button onClick={this.props.hideConponent}>点击 child </button>\n      </div>\n    );\n  }\n}\n\nexport default Child;\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br")])]),a("ul",[a("li",[n._v("子组件传值到父组件")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("父组件中： \n\nhideConponent(val) {\n  console.log(val);\n  this.setState({\n    isShowChild: false,\n  });\n}\nrender() {\n  return (\n    <div>\n      <child hideConponent={this.hideConponent.bind(this)} />\n    </div>\n  );\n}\n\n\n子组件中：\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Child extends Component {\n  static propTypes = {\n    hideConponent: PropTypes.func.isRequired,\n  }\n  handleConponent() {\n    let val = '123';\n    this.props.hideConponent(val);\n  }\n  render() {  \n    return (\n      <div>\n        this is child\n        <button onClick={this.handleConponent.bind(this)}>点击 child </button>\n      </div>\n    );\n  }\n}\n\nexport default Child;\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br")])]),a("h2",{attrs:{id:"_3-跨级组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-跨级组件通信","aria-hidden":"true"}},[n._v("#")]),n._v(" 3.跨级组件通信")]),n._v(" "),a("blockquote",[a("p",[n._v("当需要让子组件跨级访问信息时，我们可以像之前说的方法那样向更高级别的组件层层传递 props，"),a("br"),n._v("\n但此时的代码显得不那么优雅，甚至有些冗余。"),a("br"),n._v("\n在 React 中，我们还可以使用 context 来 实现跨级父子组件间的通信;")])]),n._v(" "),a("blockquote",[a("p",[n._v("不过 React 官方并不建议大量使用 context，因为尽管它可以减少逐层传递，"),a("br"),n._v("\n但当组件结 构复杂的时候，我们并不知道 context 是从哪里传过来的。"),a("br"),n._v("\nContext 就像一个全局变量一样，而 全局变量正是导致应用走向混乱的罪魁祸首之一，"),a("br"),n._v("\n给组件带来了外部依赖的副作用。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("# 父组件\n\n  // 提供一个函数,用来返回相应的context对象\n  getChildContext() {\n    return {\n      color: 'red'\n    };\n  }\n\n  render() {}\n\n  HomeIndex.childContextTypes = {\n    color: PropTypes.string\n  };\n\nchildContextTypes必须得设置，不设置在各下级组件中无法获取到数据，这项是必须项；\n\n不设置会报这样的错误：Index.getChildContext(): childContextTypes must be defined in order to use getChildContext().\n\n\n\n# 子组件\n\nChild.contextTypes = {\n  color: PropTypes.string\n};\n\nrender() {\n    return (\n      <div>\n        <button>child context {this.context.color} </button>\n      </div>\n    );\n  }\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br")])]),a("blockquote",[a("p",[n._v("子组件在《深入 React 技术栈》 中看到使用")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("static contextTypes = {    \n  color: PropTypes.string   \n}; \n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("p",[n._v("可是我这里报错，\n如果 babel设置为 es6 的转码方式，会报错，因为定义静态属性不属于 es6，而在 es7 的草案中。"),a("br"),n._v("\nES6 的 class 中只有静态方法，没有静态属性。"),a("br"),n._v("\n//由于是用ES6 class语法创建组件，其内部只允许定义方法，而不能定义属性，"),a("br"),n._v("\nclass的属性只能定义在 class 之外。 所以 contextTypes 要写在组件外部。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("Child.contextTypes = {\n  color: PropTypes.string\n};\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("ul",[a("li",[n._v("参考： "),a("a",{attrs:{href:"https://www.jianshu.com/p/29a025128990",target:"_blank",rel:"noopener noreferrer"}},[n._v("React中static defaultProps报错问题详解"),a("OutboundLink")],1)])]),n._v(" "),a("h2",{attrs:{id:"_4-没有嵌套关系的组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-没有嵌套关系的组件通信","aria-hidden":"true"}},[n._v("#")]),n._v(" 4.没有嵌套关系的组件通信")]),n._v(" "),a("blockquote",[a("p",[n._v("使用自定义事件机制")])]),n._v(" "),a("blockquote",[a("p",[n._v("没有嵌套关系的，那只能通过可以影响全局的一些机制去考虑。刚才讲到的自定义事件机制 不失为一种上佳的方法。"),a("br"),n._v("\n我们就以常用的发布/订阅模式来举例，这里借用 Node.js Events 模块的浏览器版实现。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import { EventEmitter } from 'events'; \nexport default new EventEmitter(); \n\n# 然后把 EventEmitter 实例输出到各组件中使用： \n\nimport ReactDOM from 'react-dom';\nimport React, { Component, PropTypes } from 'react';\nimport emitter from './events';\nclass ListItem extends Component {\n  static defaultProps = { checked: false, }\n  constructor(props) { super(props); }\n  render() { \n    return (\n      <li>\n        <input type=\"checkbox\" checked={this.props.checked} onChange={this.props.onChange} />\n        <span>{this.props.value}</span>\n      </li>\n    ); \n  }\n}\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      list: this.props.list.map(entry => ({ \n        text: entry.text, \n        checked: entry.checked || false, \n      })), \n    };\n  }\n  onItemChange(entry) {\n    const { list } = this.state;\n    this.setState({ \n      list: list.map(prevEntry => ({ \n        text: prevEntry.text, \n        checked: prevEntry.text === entry.text ? !prevEntry.checked : prevEntry.checked, \n      }))\n    });\n    emitter.emit('ItemChange', entry);\n  }\n  render() { \n    return (\n      <div>\n        <ul>\n          {this.state.list.map((entry, index) => (   \n            <ListItem  \n              key={`list-${index}`}  \n              value={entry.text}  \n              checked={entry.checked}  \n              onChange={this.onItemChange.bind(this, entry)}   />    \n          ))}  \n        </ul>\n      </div>);\n    }\n}\nclass App extends Component {\n  componentDidMount() { \n    this.itemChange = emitter.on('ItemChange', (data) => { \n      console.log(data); \n    });\n  }\n  componentWillUnmount() { \n    emitter.removeListener(this.itemChange); \n  }\n  render() { \n    return (<List list={[{text: 1}, {text: 2}]} />); \n  }\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br")])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[n._v("#")]),n._v(" 参考")]),n._v(" "),a("ul",[a("li",[a("a",{attrs:{href:""}},[n._v("深入React技术栈")])]),n._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/fb915d9c99c4",target:"_blank",rel:"noopener noreferrer"}},[n._v("React 中组件间通信的几种方式"),a("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=t.exports}}]);